@startuml Manage Authentication

title "Manage Authentication"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:auth" as auth
participant "<<controllers>>\n:auth" as controllersUser
participant "<<model>>\n:users" as modelUser
database "<<MongoDB>>\n:users" as userDatabase

client->server ++:req.post('auth/register')
server->auth --++:app.use('api/v1/auth',auth)
auth -> controllersUser --++:register
controllersUser->modelUser ++:create({name,tel,email,\npassword,role})
modelUser ->userDatabase ++: UserSchema
userDatabase --> modelUser --: user
controllersUser <-- modelUser --:user
controllersUser->client --:response

client->server ++:req.post('auth/login')
server->auth --++:app.use('api/v1/auth',auth)
auth -> controllersUser --++:login
controllersUser->modelUser ++:findOne({email})
modelUser ->userDatabase ++: UserSchema
userDatabase --> modelUser --:user
controllersUser <-- modelUser --:user
controllersUser->client --:response

client->server ++:req.get('auth/logout')
server->auth --++:app.use('api/v1/auth',auth)
auth -> controllersUser --++:logout
controllersUser->client --:response

client->server ++:req.put('auth/resetpassword')
server ->auth --++:app.use('api/v1/auth',auth)
auth -> controllersUser --++:resetpassword
controllersUser -> modelUser --++:findByIdAndUpdate(userID,{password:newpassword});
modelUser -> userDatabase --++:UserSchema
userDatabase --> modelUser --:user
controllersUser <-- modelUser --:user
controllersUser->client --:response

@enduml